//https://onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&page=show_problem&category=0&problem=703&mosmsg=Submission+received+with+ID+26650338

#include<bits/stdc++.h>
using namespace std;

#define endl '\n'
#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define fraction() cout.unsetf(ios::floatfield); cout.precision(10); cout.setf(ios::fixed,ios::floatfield);
#define MOD 1e9+7
#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
typedef long long int ll;
typedef tree< ll, null_type, less_equal<ll>, rb_tree_tag, tree_order_statistics_node_update > ordered_set;
/// cout<<*X.find_by_order(1)<<endl; // finds the kth element
/// cout<<X.order_of_key(-5)<<endl;  // number of items in a set that are strictly smaller than our item


map <string, vector<string>> adj;
map <string, string> parent;
map <string, int> level;

void BFS(string source){

    level.clear();

    queue <string> q;
    q.push(source);
    level[source] = 1;

    while(!q.empty()){
        string u = q.front();
        q.pop();

        for(auto v : adj[u]){
            if(level[v] == 0){
                level[v] = level[u] + 1;
                parent[v] = u;
                q.push(v);
            }
        }
    }
}

int main()
{
    optimize();


    int n;
    bool checker = 0;

    while(cin>>n){

        if(checker)cout<<endl;
        checker = 1;

        adj.clear();
        parent.clear();


        for(int i=1; i<=n; i++){
            string u,v; cin>>u>>v;
            adj[u].push_back(v);
            adj[v].push_back(u);
        }

        string s,t; cin>>s>>t;
        BFS(s);

        if(level[t] == 0){
            cout<<"No route"<<endl;
            continue;
        }

        vector <pair<string, string>> path;
        while(!parent[t].empty()){
            path.push_back({parent[t], t});
            t = parent[t];
        }

        reverse(path.begin(), path.end());

        for(auto u : path){
            cout<<u.first<<" "<<u.second<<endl;
        }
    }


    return 0;
}
